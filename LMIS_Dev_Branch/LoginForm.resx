<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>